% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindEmojiPipe.R
\name{FindEmojiPipe}
\alias{FindEmojiPipe}
\title{Class to find and/or replace the emoji on the data field of an Instance}
\description{
This class is responsible of detecting the existing emojis in the
\strong{data} field of each \code{\link{Instance}}. Identified emojis are
stored inside the \strong{emoji} field of \code{\link{Instance}} class.
Moreover if required, is able to perform inline emoji replacement.
}
\section{Details}{

\code{\link{FindEmojiPipe}} use the emoji list provided by data(emojisData).
}

\section{Note}{

\code{\link{FindEmojiPipe}} will automatically invalidate the
\code{\link{Instance}} whenever the obtained data is empty.
}

\section{Inherit}{

This class inherits from \code{\link{GenericPipe}} and implements the
\code{pipe} abstract function.
}

\seealso{
\code{\link{AbbreviationPipe}}, \code{\link{ContractionPipe}},
         \code{\link{File2Pipe}}, \code{\link{FindEmoticonPipe}},
         \code{\link{FindHashtagPipe}}, \code{\link{FindUrlPipe}},
         \code{\link{FindUserNamePipe}}, \code{\link{GuessDatePipe}},
         \code{\link{GuessLanguagePipe}}, \code{\link{Instance}},
         \code{\link{InterjectionPipe}}, \code{\link{MeasureLengthPipe}},
         \code{\link{GenericPipe}}, \code{\link{SlangPipe}},
         \code{\link{StopWordPipe}}, \code{\link{StoreFileExtPipe}},
         \code{\link{TargetAssigningPipe}}, \code{\link{TeeCSVPipe}},
         \code{\link{ToLowerCasePipe}}
}
\section{Super class}{
\code{\link[bdpar:GenericPipe]{bdpar::GenericPipe}} -> \code{FindEmojiPipe}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FindEmojiPipe-new}{\code{FindEmojiPipe$new()}}
\item \href{#method-FindEmojiPipe-pipe}{\code{FindEmojiPipe$pipe()}}
\item \href{#method-FindEmojiPipe-findEmoji}{\code{FindEmojiPipe$findEmoji()}}
\item \href{#method-FindEmojiPipe-replaceEmoji}{\code{FindEmojiPipe$replaceEmoji()}}
\item \href{#method-FindEmojiPipe-clone}{\code{FindEmojiPipe$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="bdpar" data-topic="GenericPipe" data-id="getAlwaysBeforeDeps"><a href='../../bdpar/html/GenericPipe.html#method-GenericPipe-getAlwaysBeforeDeps'><code>bdpar::GenericPipe$getAlwaysBeforeDeps()</code></a></li>
<li><span class="pkg-link" data-pkg="bdpar" data-topic="GenericPipe" data-id="getNotAfterDeps"><a href='../../bdpar/html/GenericPipe.html#method-GenericPipe-getNotAfterDeps'><code>bdpar::GenericPipe$getNotAfterDeps()</code></a></li>
<li><span class="pkg-link" data-pkg="bdpar" data-topic="GenericPipe" data-id="getPropertyName"><a href='../../bdpar/html/GenericPipe.html#method-GenericPipe-getPropertyName'><code>bdpar::GenericPipe$getPropertyName()</code></a></li>
<li><span class="pkg-link" data-pkg="bdpar" data-topic="GenericPipe" data-id="hash"><a href='../../bdpar/html/GenericPipe.html#method-GenericPipe-hash'><code>bdpar::GenericPipe$hash()</code></a></li>
<li><span class="pkg-link" data-pkg="bdpar" data-topic="GenericPipe" data-id="setAlwaysBeforeDeps"><a href='../../bdpar/html/GenericPipe.html#method-GenericPipe-setAlwaysBeforeDeps'><code>bdpar::GenericPipe$setAlwaysBeforeDeps()</code></a></li>
<li><span class="pkg-link" data-pkg="bdpar" data-topic="GenericPipe" data-id="setNotAfterDeps"><a href='../../bdpar/html/GenericPipe.html#method-GenericPipe-setNotAfterDeps'><code>bdpar::GenericPipe$setNotAfterDeps()</code></a></li>
<li><span class="pkg-link" data-pkg="bdpar" data-topic="GenericPipe" data-id="setPropertyName"><a href='../../bdpar/html/GenericPipe.html#method-GenericPipe-setPropertyName'><code>bdpar::GenericPipe$setPropertyName()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FindEmojiPipe-new"></a>}}
\if{latex}{\out{\hypertarget{method-FindEmojiPipe-new}{}}}
\subsection{Method \code{new()}}{
Creates a \code{\link{FindEmojiPipe}} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FindEmojiPipe$new(
  propertyName = "Emojis",
  alwaysBeforeDeps = list(),
  notAfterDeps = list(),
  replaceEmojis = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{propertyName}}{A \code{\link{character}} value. Name of the property
associated with the \code{\link{GenericPipe}}.}

\item{\code{alwaysBeforeDeps}}{A \code{\link{list}} value. The dependencies
alwaysBefore (\code{\link{GenericPipe}s} that must be executed before
this one).}

\item{\code{notAfterDeps}}{A \code{\link{list}} value. The dependencies
notAfter (\code{\link{GenericPipe}s} that cannot be executed after
this one).}

\item{\code{replaceEmojis}}{A \code{\link{logical}} value. Indicates if the
emojis are replaced.}

\item{\code{propertyLanguageName}}{A \code{\link{character}} value. Name of the
language property.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FindEmojiPipe-pipe"></a>}}
\if{latex}{\out{\hypertarget{method-FindEmojiPipe-pipe}{}}}
\subsection{Method \code{pipe()}}{
Preprocesses the \code{\link{Instance}} to obtain/replace
the emojis. The emojis found in the data are added to the
list of properties of the \code{\link{Instance}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FindEmojiPipe$pipe(instance)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{instance}}{A \code{\link{Instance}} value. The \code{\link{Instance}}
to preprocess.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{\link{Instance}} with the modifications that have
occurred in the pipe.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FindEmojiPipe-findEmoji"></a>}}
\if{latex}{\out{\hypertarget{method-FindEmojiPipe-findEmoji}{}}}
\subsection{Method \code{findEmoji()}}{
Checks if the emoji is in the data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FindEmojiPipe$findEmoji(data, emoji)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A \code{\link{character}} value. The text where emoji
will be searched.}

\item{\code{emoji}}{A \code{\link{character}} value. Indicates the
emoji to find.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link{logical}} value depending on whether the
emoji is in the data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FindEmojiPipe-replaceEmoji"></a>}}
\if{latex}{\out{\hypertarget{method-FindEmojiPipe-replaceEmoji}{}}}
\subsection{Method \code{replaceEmoji()}}{
Replaces the \emph{emoji} in the data for the
\emph{extendedEmoji}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FindEmojiPipe$replaceEmoji(emoji, extendedEmoji, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{emoji}}{A \code{\link{character}} value. Indicates the
emoji to replace.}

\item{\code{extendedEmoji}}{A \code{\link{character}} value. Indicates the
string to replace for the emojis found.}

\item{\code{data}}{A \code{\link{character}} value. The text where emoji
will be replaced.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The data with the emojis replaced.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FindEmojiPipe-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FindEmojiPipe-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FindEmojiPipe$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
